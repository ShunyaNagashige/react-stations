* {
  margin: 0;
  padding: 0;
}

header {
  background-color: #f5f5f5;
}

.title {
  text-align: center;
  font-size: 54px;
  font-family: sans-serif;
}

.flex-container {
  display: flex;
}

.description {
  margin-top: 20px;
}
@media screen and (min-width: 320px) and (max-width: 768px) {
  .description {
    flex-direction: column;
    align-items: center;
  }
}
@media screen and (min-width: 768px) and (max-width: 1200px) {
  .description {
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
  }
}

@media screen and (min-width: 320px) and (max-width: 768px) {
  .site-desc {
    display: inline-block;
    margin-bottom: 20px;
  }
}

.img-update-wrap {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.dog-img {
  width: 443px;
  height: 268px;
  object-fit: cover;
}

.update-btn {
  margin: 5px;
  width: 64px;
  background-color: #00bfff;
  color: #ffffff;
  border-radius: 10px;
}

.breeds-list-wrap {
  flex-direction: row;
  justify-content: center;
}

.dog-list-container {
  flex-direction: row;
  justify-content: center;
  margin-top: 20px;
}

.breeds-list-label {
  margin-right: 10px;
}

.show-btn {
  margin-left: 30px;
  width: 128px;
  background-color: #00bfff;
  color: #ffffff;
  border-radius: 10px;
}

/* 
## React Railway Station7のクリア判定をしてほしい
### 工夫した点
- どんなサイズの画像でも，縦横300pxの枠内に収まるようにした．これにより，横幅が300pxより広いデバイスなら画像を画面内に収めることができ，見やすい．
- 横幅が768px未満であれば，サイトの説明，画像，ボタンが縦に並ぶようにした．(レスポンシブデザイン)

### 困っている点
- 前述した768px未満の場合に，ボタンを画像の右下に配置することができない．(なお，768px以上の場合は，画像とボタンの親要素にalign-items: flex-endを記述することで実現している．)

### 自分で調べたこと
- 
 */
